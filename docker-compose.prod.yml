version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fops-backend-prod
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - CHROMA_PERSIST_DIR=/app/chroma_db
      - SQLITE_URL=sqlite:////app/data/fops.db
      - ENVIRONMENT=production
    volumes:
      - ./chroma_db:/app/chroma_db
      - ./data:/app/data
      - ./audit_logs:/app/audit_logs
      - ~/.kube/config:/root/.kube/config:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    networks:
      - fops-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: fops-frontend-prod
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - fops-network

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: fops-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - fops-network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: fops-grafana-prod
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - fops-network

networks:
  fops-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: